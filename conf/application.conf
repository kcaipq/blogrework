# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="sfpXyEEOhPhfYOr[0mZDahd]s2s1:n<<j>m4t:;<rGNCe8;i3]Y598AZ9cg]5gEO"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=controllers.Global

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Cache plugin
ehcacheplugin=disabled

# Event Store
# ~~~~~
# Currently supported event store implementations are `redis` and `fake`.
#eventstore.implementation=fake
eventstore.implementation=redis
eventstore.redis.prefix=blog
eventstore.redis.host=localhost
eventstore.redis.post=6379
eventstore.redis.connection-pool-size=16

email-registry.redis.host=localhost
email-registry.redis.post=6379
email-registry.redis.key=registered-emails

# Increased timeout to handle blocking Redis event store when load testing.
play.akka.actor {
 retrieveBodyParserTimeout = 5 seconds
 deployment {
  /actions {
    nr-of-instances = 16
  }
  /promises {
    nr-of-instances = 16
  }
 }
 actions-dispatcher.fork-join-executor {
   parallelism-factor = 16
   parallelism-max = 16
 }
 promises-dispatcher.fork-join-executor {
   parallelism-factor = 16
   parallelism-max = 16
 }
}
